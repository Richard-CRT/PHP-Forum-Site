<?php	include("../../config.php");	include($config["WRoot"].$config["FRoot"]."/scripts/sessionHandler.php");		function generateCode($length) {		// Create $length character long code		$characters = '0123456789abcdefghijklmnopqrstuvwxyz';		$code = '';		for ($i = 0; $i < $length; $i++) {			$code .= $characters[rand(0, strlen($characters) - 1)];		}		return $code;	}		function sendEmail($config,$subject,$address,$name,$body) {		// Implement PHPMailer class so we can send email		require_once($config["WRoot"].$config["FRoot"].'/PHPMailer/PHPMailerAutoload.php');				// Created the mail object		$mail             = new PHPMailer();		$body             = stripslashes($body);				// Setup some details		$mail->IsSMTP(); // telling the class to use SMTP		$mail->SMTPDebug  = 0;                      // enables SMTP debug information (for testing)													// 1 = errors and messages													// 2 = messages only		$mail->SMTPAuth   = true;                   // enable SMTP authentication		$mail->SMTPSecure = "";                  // sets the prefix to the server		$mail->Host       = $config['Ehost'];        // sets the SMTP server		$mail->Port       = $config['EsmtpPort'];                    // set the SMTP port		$mail->Username   = "no-reply@".$config['Edomain'];      // username		$mail->Password   = $config['EnoReplyPass'];           // password		$mail->SetFrom('no-reply@'.$config['Edomain'], 'No-Reply');		$mail->AddReplyTo('no-reply@'.$config['Edomain'],'No-Reply');		$mail->Subject    = $subject;		//$mail->AltBody    = "To view the message, please use an HTML compatible email viewer!"; // optional, comment out and test		$mail->MsgHTML($body);		$mail->AddAddress($address, $name);			// Send email and check for errors		if(!$mail->Send()) {		  die( "Mailer Error: " . $mail->ErrorInfo);		}	}		if (!isset($_POST['refer'])) {		$_POST['refer'] = mb_convert_encoding(hex2bin($config['FRoot']),'UTF-8','UCS-2');	}	if (!isset($_POST['email'])) {		// Email not set		header("Location: ".$config["FRoot"]."/reset/?refer=".$_POST['refer']."&code=1");		die();	} else {	}	// Connect to DB	if(!isset($pdo)) {		try {			$pdo = new PDO('mysql:host='.$config['DBhost'].';dbname='.$config['DBname'], $config['DBusername'], $config['DBpassword'], $config['DBoptions']);		} catch (PDOException $e) {			echo 'Connection failed: ' . $e->getMessage();			die;		}	}		$upperEmail = mb_strtoupper($_POST['email'], 'UTF-8');		// Usertype Guide	// 1		User	// 2		Developer	// 4		Moderator	// 8		Database	// 16		Admin		// Get important details about user	$stmt = $pdo->prepare('SELECT Id,Username,Email FROM Users WHERE Email = :upperEmail;');	$stmt->bindParam(':upperEmail', $upperEmail, PDO::PARAM_STR); // <-- Automatically sanitized for SQL by PDO	$stmt->execute();	$row = $stmt->fetch();	// Save important information	$userId = $row['Id'];	$username = $row['Username'];	$email = $row['Email'];	if ($userId != "") {		// User Exists				// Create an activation code 20 characters long		$code = generateCode(20);				date_default_timezone_set('UTC');		$timestamp = time();				$stmt = $pdo->prepare('SELECT PasswordResetId FROM PasswordReset WHERE UserId = :userId;');		$stmt->bindParam(':userId', $userId, PDO::PARAM_INT); // <-- Automatically sanitized for SQL by PDO		$stmt->execute();		$rows = $stmt->fetchAll();		foreach ($rows as $row)		{			$stmt = $pdo->prepare('DELETE FROM PasswordReset WHERE PasswordResetId = passwordResetId;');			$stmt->bindParam(':passwordResetId', $row['PasswordReset'], PDO::PARAM_INT); // <-- Automatically sanitized for SQL by PDO			$stmt->execute();		}		// Create the activation code listing using $userId		$stmt = $pdo->prepare('INSERT INTO PasswordReset (UserId, PasswordResetCode,DateCreated) VALUES (:userId, :passwordResetCode, :dateCreated);');		$stmt->bindParam(':userId', $userId, PDO::PARAM_INT); // <-- Automatically sanitized for SQL by PDO		$stmt->bindParam(':passwordResetCode', $code, PDO::PARAM_STR); // <-- Automatically sanitized for SQL by PDO		$stmt->bindParam(':dateCreated', $timestamp, PDO::PARAM_INT); // <-- Automatically sanitized for SQL by PDO		$stmt->execute();				// Send new password link to email		$subject = "www.".$config["Edomain"]." Forum ".$username." Password Reset";		$body = str_replace("UNIQUEUSER",$username,str_replace("UNIQUEDOMAIN",$config['Edomain'],str_replace("UNIQUELINK","http://www.".$config['Edomain'].$config['FRoot']."/passwordreset/?code=".$code,file_get_contents('ResetEmail.html'))));		sendEmail($config,$subject,$email,$username,$body);				header("Location: ".$config["FRoot"]."/login/?refer=".$_POST['refer']."&code=9");		die();	} else {		// No User with that email		header("Location: ".$config["FRoot"]."/reset/?refer=".$_POST['refer']."&code=2");		die();	}?>